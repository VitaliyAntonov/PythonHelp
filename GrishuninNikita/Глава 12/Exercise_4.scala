/**
 * Предыдущая реализация должна предусматривать специальный случай, когда n < 1.
 * Покажите, как избежать этого с помощью foldLeft.
 * (Ознакомьтесь с описанием foldLeft в Scaladoc.
 * Этот метод напоминает reduceLeft, за исключением того,что первое значение в цепочке поставляется в вызове.)
 */

object Exercise_4 extends App{
  def factorial(x: Int) = (1 to x).foldLeft(1)(_ * _) // foldLeft(1) означает что первое значение в цепочке 1 to x будет равно единице, в случае когда значения отрицательно первое значение в цепочке становится и последним
  val b = factorial(-3)
  println(b) // Выведет 1
}
